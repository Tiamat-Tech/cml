name: Release packages and images

on:
  workflow_dispatch:
  release:
    types:
    - published
    - edited

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install dependencies
      run: npm install
    - name: Publish package
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker:
    strategy:
      matrix:
        cml: [0]
        dvc: [1, 2]
        gpu: [false, true]
        base: [0, 1]
        include:
          - base: 0
            cuda: 10.1
            cudnn: 7
            python: 2.7
            ubuntu: 18.04
          - base: 1
            cuda: 11.0.3
            cudnn: 8
            python: 3.8
            ubuntu: 20.04
    runs-on: ubuntu-latest
    needs: package

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push
        if: matrix.gpu == false
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./
          file: ./Dockerfile
          tags: dvcorg/cml:${{ matrix.cml }}-dvc-${{ matrix.dvc }}-base-${{ matrix.base }}
          build-args: |
            CML_VERSION=${{ matrix.cml }}
            DVC_VERSION=${{ matrix.dvc }}
            PYTHON_VERSION=${{ matrix.python }}
            BASE_IMAGE=ubuntu:${{ matrix.ubuntu }}

      - name: Build and push
        if: matrix.gpu == true
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./
          file: ./Dockerfile
          tags: dvcorg/cml:${{ matrix.cml }}-dvc-${{ matrix.dvc }}-base-${{ matrix.base }}-gpu
          build-args: |
            CML_VERSION=${{ matrix.cml }}
            DVC_VERSION=${{ matrix.dvc }}
            PYTHON_VERSION=${{ matrix.python }}
            BASE_IMAGE=nvidia/cuda:${{ matrix.cuda }}-cudnn${{ matrix.cudnn }}-runtime-ubuntu${{ matrix.ubuntu }}
